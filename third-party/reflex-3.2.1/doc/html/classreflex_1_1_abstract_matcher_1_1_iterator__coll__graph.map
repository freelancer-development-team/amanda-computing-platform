<map id="reflex::AbstractMatcher::Iterator&lt; T &gt;" name="reflex::AbstractMatcher::Iterator&lt; T &gt;">
<area shape="rect" id="node3" href="$classreflex_1_1_abstract_matcher.html" title="The abstract matcher base class template defines an interface for all pattern matcher engines..." alt="" coords="1027,93,1186,119"/>
<area shape="rect" id="node6" href="$classreflex_1_1_abstract_matcher_1_1_operation.html" title="AbstractMatcher::Operation functor to match input to a pattern, also provides a (const) AbstractMatch..." alt="" coords="1295,115,1453,156"/>
<area shape="rect" id="node4" href="$structreflex_1_1_abstract_matcher_1_1_handler.html" title="Event handler functor base class to invoke when the buffer contents are shifted out, e.g. for logging the data searched. " alt="" coords="787,20,945,61"/>
<area shape="rect" id="node5" href="$structreflex_1_1_abstract_matcher_1_1_option.html" title="AbstractMatcher::Options for matcher engines. " alt="" coords="787,85,945,127"/>
<area shape="rect" id="node7" href="$classreflex_1_1_input.html" title="Input character sequence class for unified access to sources of input text. " alt="" coords="820,151,912,178"/>
<area shape="rect" id="node8" href="$structreflex_1_1_input_1_1_handler.html" title="FILE* handler functor base class to handle FILE* errors and non&#45;blocking FILE* reads. " alt="" coords="537,126,683,153"/>
<area shape="rect" id="node9" title="STL class. " alt="" coords="565,177,655,203"/>
<area shape="rect" id="node10" title="STL class. " alt="" coords="359,169,488,211"/>
<area shape="rect" id="node11" title="STL class. " alt="" coords="155,177,309,203"/>
<area shape="rect" id="node12" title="STL class. " alt="" coords="5,177,105,203"/>
</map>
